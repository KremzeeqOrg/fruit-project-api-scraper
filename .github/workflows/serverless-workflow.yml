on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'src/*'
      - '.github/workflows/serverless-workflow.yml'

env:
  TEST_DIR: "src/tests"
  PYTHON_VERSION: 3.11
  NODE_VERSION: 20
  AWS_REGION: "eu-west-2"

jobs:
  pytest:
    name: "Pytest"
    runs-on: ubuntu-latest
    strategy:  
      matrix:  
        test_file: ["api_mapping_manager", "record_manager", "scraper", "utils"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python version - ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies  
      run: |  
          python -m pip install --upgrade pip  
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi 
    - name: Lint with Ruff
      # see ruff.toml for config
      uses: chartboost/ruff-action@v1
      continue-on-error: true
    - name: Test with pytest
      run: pytest -vv ${{ env.TEST_DIR }}/test_${{ matrix.test_file }}.py
  deploy:
    permissions:
      id-token: write
      contents: read
    name: deploy
    needs: pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Set up Python version - ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Set AWS context
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: true
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: -c "npm install && npm list -g && serverless deploy --verbose"
        entrypoint: /bin/bash
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
