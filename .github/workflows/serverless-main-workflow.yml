on:
  push:
    branches:
      - main

concurrency:
  group: main
  cancel-in-progress: true

env:
  TEST_DIR: "src/tests"
  NODE_VERSION: 20
  PYTHON_VERSION: '3.10'
  SERVERLESS_VERSION: '3.38.0'
  APP: "fruit-project-api-scraper"

jobs:
  pytest:
    name: Pytest
    permissions:
      contents: read
    strategy:  
      matrix:  
        test_file: ${{ fromJson('["api_mapping_manager", "record_manager", "scraper", "utils"]') }}
    uses: KremzeeqOrg/gha-reusable-workflows/.github/workflows/pytest-unit-test-workflow.yml@main
    with:
      environment: dev
      test_file: ${{ matrix.test_file }}
    
  serverless-deploy-to-dev:
    name: "Serverless Deploy to Dev"
    needs: [ pytest ]
    permissions:
      id-token: write
      contents: read
    uses: KremzeeqOrg/gha-reusable-workflows/.github/workflows/serverless-deploy-workflow.yml
    with:
      environment: dev
    secrets: 
      aws-region: ${{ secrets.AWS_REGION }}
      aws-iam-role: ${{ secrets.AWS_ACCOUNT_ACCESS_ROLE }}
      aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
      dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
      serverless-access-key: ${{ secrets.SERVERLESS_ACCESS_KEY }}

  serverless-deploy-to-prod:
    name: "Serverless Deploy to Prod"
    needs: [ erverless-deploy-to-dev ]
    permissions:
      id-token: write
      contents: read
    uses: KremzeeqOrg/gha-reusable-workflows/.github/workflows/serverless-deploy-workflow.yml
    with:
      environment: prod
    secrets: 
      aws-region: ${{ secrets.AWS_REGION }}
      aws-iam-role: ${{ secrets.AWS_ACCOUNT_ACCESS_ROLE }}
      aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
      dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
      serverless-access-key: ${{ secrets.SERVERLESS_ACCESS_KEY }}