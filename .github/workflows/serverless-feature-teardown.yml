on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  APP: "fruit-project-api-scraper"
  ENV: feature

jobs:
  label-check:
    if: ${{ github.event.pull_request.merged }}
    permissions:
      id-token: write
      contents: read
    name: "Teardown Serverless Cloudformation Stack"
    runs-on: ubuntu-latest
    outputs:
      deployed: ${{ steps.set_output.outputs.deployed }}
    steps:
    - id: deploy_label_check
      uses: docker://agilepathway/pull-request-label-checker:latest
      with:
        one_of: deploy
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        allow_failure: true
    - id: set_output
      run: |
        if [[ ${{ steps.deploy_label_check.outputs.label_check }} == "success" ]]; then

          echo "deployed=true" >> "$GITHUB_OUTPUT"
        else
          echo "deployed=false" >> "$GITHUB_OUTPUT"
        fi

  feature-cloudformation-stack-teardown:
    needs: [label-check]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    if: ${{ needs.label-check.outputs.deployed == 'true' }}
    environment: feature
    steps:
    - name: Set AWS context
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ACCOUNT_ACCESS_ROLE }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ secrets.AWS_REGION }}
        mask-aws-account-id: true
    - name: Delete stack
      uses: go-to-k/delstack@v1.8.0
      with:
        stack-name: ${{ env.APP }}-feature
        region: ${{ secrets.AWS_REGION }}
    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    - id: set_deployment_as_inactive
      run: |
        DEPLOYMENT_ID=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          "https://api.github.com/repos/KremzeeqOrg/fruit-project-api-scraper/deployments?environment=feature" | \
          jq -r 'sort_by(.created_at) | last | .id')
        echo "Latest deployment ID: ${DEPLOYMENT_ID}"
        HTTP_STATUS=$(curl -L \
          -o /dev/null \
          -w "%{http_code}" \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/KremzeeqOrg/fruit-project-api-scraper/deployments/${DEPLOYMENT_ID}/statuses \
          -d '{"environment":"feature","state":"inactive","description":"Deployment finished successfully."}')
        echo "HTTP status code: $HTTP_STATUS"
        if [[ "$HTTP_STATUS" == "400" || "$HTTP_STATUS" == "403" ]]; then
          echo "Failed with status code $HTTP_STATUS"
          exit 1
        fi